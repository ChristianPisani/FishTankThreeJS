/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 .\\public\\Boat.glb
*/

import React, {
    useRef
} from 'react'
import {
    useGLTF
} from '@react-three/drei'
import {
    useFrame
} from "@react-three/fiber";

export function Boat(props) {
    const {
        nodes,
        materials
    } = useGLTF('/Boat.glb')

    const boatRef = useRef();

    useFrame(({clock}) => {
        const elapsedTime = clock.getElapsedTime();
        if(boatRef.current) {
            boatRef.current.position.y = props.position[1] + Math.sin(elapsedTime) * 0.05;
            boatRef.current.rotation.z = props.rotation[2] + Math.sin(elapsedTime) * 0.05;
            boatRef.current.rotation.y = props.rotation[1] + Math.cos(elapsedTime) * 0.05;
        }
    })
    
    return (
        <group {...props}
               dispose={null}
               ref={boatRef}>
            <mesh
                geometry={nodes.Boat.geometry}
                material={materials.WoodTable}/>
            <mesh
                geometry={nodes.Cube.geometry}
                material={materials.Blob}/>
            <mesh
                geometry={nodes.Sphere.geometry}
                material={materials['Material.007']}/>
            <mesh
                geometry={nodes.Sphere001.geometry}
                material={materials['Material.007']}/>
            <mesh
                geometry={nodes.Circle.geometry}
                material={materials['Material.007']}/>
            <mesh
                geometry={nodes.Cylinder.geometry}
                material={materials.WoodTable}/>
            <mesh
                geometry={nodes.Cylinder001.geometry}
                material={materials['Material.007']}/>
            <mesh
                geometry={nodes.Cylinder002.geometry}
                material={materials['Material.007']}/>
            <mesh
                geometry={nodes.Cube001.geometry}
                material={nodes.Cube001.material}/>
        </group>
    )
}

useGLTF.preload('/Boat.glb')
